#!/bin/ksh
# @Object: Basic definitions and functions
# @Author: S.Chamberland
# @Date:   March 2014
# @USAGE: . .rdebase.inc.dot

if [[ x"${0##*/}" == x".rdebase.inc.dot" ]] ; then
   cat<<EOF 1>&1
=======================================
ERROR: This script should be sourced
       . $0
=======================================
EOF
   exit 1
fi

eval $(rdevar --shdump)

verbose=${verbose:-0}
quiet=${quiet:-0}
MYSELF=${0##*/}
RDE_BASE_ARCH=${CONST_RDE_BASE_ARCH}
RDE_COMP_ARCH=${CONST_RDE_COMP_ARCH}
RDE_ARCH=${CONST_RDE_ARCH}
ROOT=$(pwd)
BUILDOBJ=${CONST_BUILDOBJ}
BUILDBIN=${CONST_BUILDBIN}

RDE_INCLUDE=${CONST_RDEINC}

SRC_PATH_FILE=${CONST_SRCPATHFILE}
RDE_BASE_MAKEFILES="Makefile Makefile.build.mk Makefile.rules.mk"

RDE_BASE_DIR0="$BUILDOBJ $BUILDBIN"
RDE_BASE_DIR="$RDE_BASE_DIR0"
RDE_BASE_FILE="$RDE_BASE_MAKEFILES $SRC_PATH_FILE"

INCSUFFIXES="${CONST_RDESUFFIXINC}"
SRCSUFFIXES="${CONST_RDESUFFIXSRC}"
VALIDEXT="$INCSUFFIXES $SRCSUFFIXES"

##
# Check if PWD is a RDE dir
##
rde_check_dir() {
   for _mydir in $RDE_BASE_DIR0 ; do
      if [[ ! -d $_mydir || ! -w $_mydir || ! -r $_mydir ]] ;then
         mystderr 0 "RDE Dir not found or with wrong permissions: $_mydir"
         return 1
      fi
   done
   for _myfile in $RDE_BASE_FILE ; do
      if [[ ! -f $_myfile || ! -r $_myfile ]] ;then
         mystderr 0 "RDE File not found or not readable: $_myfile"
         return 1
      fi
   done
   return 0
}

rde_exit_if_not_rdetopdir() {
   rde_check_dir
   if [[ $? -ne 0 ]] ; then
      if [[ $quiet == 0 ]] ; then
         cat<<EOF 1>&2
=======================================
ERROR: $MYSELF should be run in a RDE top development dir
       Maybe you forgot to run "rde addsrc" or "rde mklink"?
=======================================
EOF
      fi
      exit 1
   fi
}

##
#
##
myerror() {
   if [[ $quiet == 0 ]] ; then
	   more <<EOF

ERROR: $1

EOF
      usage_long
   fi
   exit 1
}

##
#
##
myecho() {
   if [[ $verbose -ge $1 && $quiet == 0 ]] ; then
      shift
      echo $@ 2>&1
   fi
}
mystdout() {
   myecho $@
}
mystderr() {
   if [[ $verbose -ge $1 && $quiet == 0 ]] ; then
      shift
      echo $@ 1>&2
   fi
}

##
#
##
mysrcpath() {
   echo $(rdevar srcpath)
}
