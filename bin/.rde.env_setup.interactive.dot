#!/bin/ksh
if [[ x$RDE_COMPLETE_MAKE != xdefault ]] ; then
   complete -f make
fi
if [[ x${ORDENV_PLAT:-$(uname -spvr)} == xaix-7.1-ppc7-64 || x$BASE_ARCH == xAIX-powerpc7 ]] ; then
   ## s.use gmake as make
   ## s.use gtar as tar
   if [[ x$RDE_COMPLETE_MAKE != xdefault ]] ; then
      complete -f gmake
   fi
   # else
   #    complete -o default -F _longopt make
fi

_rdeutil_basesrclist(){
   echo $(for item in $(rdevar srcpath) ; do ls -1 ${item} ; done)
   return 0
}

__rdebasesrc__(){
   local word=${COMP_WORDS[COMP_CWORD]}
   COMPREPLY=( $(compgen -W "$(_rdeutil_basesrclist)" -- ${word}) )
   return 0
}

__rdelocalsrc__(){
   local word=${COMP_WORDS[COMP_CWORD]}
   COMPREPLY=( $(compgen -f -X "!*.+($(rdevar rdesuffix | sed 's/\s*\./|/g'))" -- ${word}) )
   return 0
}

__rdeallsrc__(){
   local word=${COMP_WORDS[COMP_CWORD]}
   COMPREPLY=( $(compgen -f -W "$(_rdeutil_basesrclist)" -X "!*.+($(rdevar rdesuffix | sed 's/\s*\./|/g'))" -- ${word}) )
   return 0
}

__rdegeneric__(){
   local word=${COMP_WORDS[COMP_CWORD]}
   COMPREPLY=( $(compgen -f -- ${word}) )
   return 0
}

_rdeco_(){
   __rdebasesrc__
   return 0
}
_rdediff_(){
   __rdelocalsrc__
   return 0
}
_rderm_(){
   __rdelocalsrc__
   return 0
}
_rdeed_(){
   __rdeallsrc__
}
_rdefind_(){
   __rdeallsrc__
}
_rdelocate_(){
   __rdeallsrc__
}

_rdecomplete_(){ 
   local cmd="${1##*/}"
   local word=${COMP_WORDS[COMP_CWORD]}
   local line=${COMP_LINE}
   local narg=$(echo ${line} | wc -w)
   
   # Attempt to fill with a utility-specific completion
   if [[ ( ${narg} -gt 1 && -z "${word}" ) || ( ${narg} -gt 2 ) ]] ; then 
      local rdecmd="${COMP_WORDS[1]}"
      if [[ -n "${rdecmd}" ]] ; then
         local rdefunc=_rde${rdecmd}_
         if [[ $(type -p ${rdefunc}; echo $?) -eq 0 ]] ; then
            _rde${rdecmd}_
            return 0
         else
            __rdegeneric__
            return 0
         fi
         return 0
      fi
   fi

   # Generic completion provides list of rde commands
   COMPREPLY=( $(compgen -W "$(rdevar utils | sed 's/\s*rde/ /g')" -- ${word} ) )
   return 0
}

# Apply completion for all utilities
for util in $(rdevar utils) ; do
   rdefunc=_${util}_
   if [[ $(type -p ${rdefunc}; echo $?) -eq 0 ]] ; then
      complete -F ${rdefunc} ${util}
   else
      complete -F __rdegeneric__ ${util}
   fi
   unset rdefunc
done
complete -F _rdecomplete_ rde
